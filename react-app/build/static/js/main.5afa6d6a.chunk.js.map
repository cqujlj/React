{"version":3,"sources":["routes/index.js","pages/Login.js","pages/PageNotFound.js","pages/admin/products/List.js","pages/admin/products/Edits.js","pages/admin/dashboard/Index.js","components/frame/Frame.js","App.js","serviceWorker.js","index.js"],"names":["mainRoutes","path","component","adminRoutes","exact","SubMenu","Menu","Header","Layout","Content","Sider","Frame","props","className","theme","mode","defaultSelectedKeys","Item","key","width","defaultOpenKeys","style","height","borderRight","icon","UserOutlined","title","LaptopOutlined","NotificationOutlined","padding","margin","minHeight","children","App","map","route","render","routeProps","to","Boolean","window","location","hostname","match","ReactDom","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0LAOO,IAAMA,EAAa,CACtB,CACIC,KAAK,SACLC,UCTO,WACX,OACI,6BACI,gEDQR,CACID,KAAK,OACLC,UEbO,WACX,OACI,6BACI,gDFaCC,EAAc,CACvB,CACIF,KAAK,kBACLC,UGnBO,WACX,OACI,6BACI,8DHiBJE,OAAM,GAEV,CACIH,KAAK,sBACLC,UIxBO,WACX,OACI,6BACI,8DJsBJE,OAAM,GAEV,CACIH,KAAK,mBACLC,UK7BO,WACX,OACI,6BACI,iE,qDCAHG,EAAYC,IAAZD,QACAE,EAA2BC,IAA3BD,OAAQE,EAAmBD,IAAnBC,QAASC,EAAUF,IAAVE,MAEV,SAASC,EAAMC,GAC1B,OACI,kBAAC,IAAD,KACI,kBAACL,EAAD,CAAQM,UAAU,UACd,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,MACvD,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KAAf,SACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,SACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,WAIR,kBAAC,IAAD,KACI,kBAACR,EAAD,CAAOS,MAAO,IAAKN,UAAU,0BACzB,kBAAC,IAAD,CACIE,KAAK,SACLC,oBAAqB,CAAC,KACtBI,gBAAiB,CAAC,QAClBC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,IACtC,kBAAClB,EAAD,CAASa,IAAI,OAAOM,KAAM,kBAACC,EAAA,EAAD,MAAkBC,MAAM,YAC9C,kBAAC,IAAKT,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,YAEJ,kBAACb,EAAD,CAASa,IAAI,OAAOM,KAAM,kBAACG,EAAA,EAAD,MAAoBD,MAAM,YAChD,kBAAC,IAAKT,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,YAEJ,kBAACb,EAAD,CAASa,IAAI,OAAOM,KAAM,kBAACI,EAAA,EAAD,MAA0BF,MAAM,YACtD,kBAAC,IAAKT,KAAN,CAAWC,IAAI,KAAf,WACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,MAAf,YACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,MAAf,YACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,MAAf,eAKZ,kBAAC,IAAD,CAAQG,MAAO,CAAEQ,QAAS,gBACtB,kBAAC,IAAD,CAAYR,MAAO,CAAES,OAAQ,WACzB,kBAAC,IAAWb,KAAZ,aACA,kBAAC,IAAWA,KAAZ,aACA,kBAAC,IAAWA,KAAZ,aAEJ,kBAACR,EAAD,CACII,UAAU,yBACVQ,MAAO,CACHQ,QAAS,GACTC,OAAQ,EACRC,UAAW,MAEdnB,EAAMoB,aChCjBC,MAxBf,WACE,OACE,kBAACtB,EAAD,KACI,kBAAC,IAAD,KAEQR,EAAY+B,KAAK,SAACC,GACf,OAAO,kBAAC,IAAD,CACHjB,IAAOiB,EAAMlC,KACbA,KAAQkC,EAAMlC,KACdG,MAAS+B,EAAM/B,MACfgC,OAAQ,SAACC,GACL,OAAO,kBAACF,EAAMjC,UAAcmC,SAO3C,kBAAC,IAAD,CAAUC,GAAG,YCVLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASR,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOnC,KAAK,SAASmC,OAAW,SAAAC,GAAU,OAAI,kBAAC,EAAQA,MAEnDrC,EAAWkC,KAAK,SAACC,GACT,OAAO,kBAAC,IAAD,CAAOjB,IAAKiB,EAAMlC,KAAMA,KAAMkC,EAAMlC,KAAMC,UAAWiC,EAAMjC,eAG9E,kBAAC,IAAD,CAAUoC,GAAG,WAGvBO,SAASC,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.5afa6d6a.chunk.js","sourcesContent":["// 配置路由\r\nimport Login from \"../pages/Login\";\r\nimport PageNotFound from \"../pages/PageNotFound\";\r\nimport List from \"../pages/admin/products/List\";\r\nimport Edits from \"../pages/admin/products/Edits\";\r\nimport Index from \"../pages/admin/dashboard/Index\";\r\n\r\nexport const mainRoutes = [\r\n    {\r\n        path:'/login',\r\n        component:Login\r\n    },\r\n    {\r\n        path:'/404',\r\n        component:PageNotFound\r\n    }\r\n];\r\nexport const adminRoutes = [\r\n    {\r\n        path:'/admin/products',\r\n        component:List,\r\n        exact:true\r\n    },\r\n    {\r\n        path:'/admin/products/:id',\r\n        component:Edits,\r\n        exact:true\r\n    },\r\n    {\r\n        path:'/admin/dashboard',\r\n        component:Index\r\n    },\r\n];","import React from \"react\";\r\nexport default function Login() {\r\n    return(\r\n        <div>\r\n            <h1>我是Login页面</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function PageNotFound() {\r\n    return(\r\n        <div>\r\n            <h1>PageNotFound</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function List() {\r\n    return(\r\n        <div>\r\n            <h1>我是List页面</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function Edits() {\r\n    return(\r\n        <div>\r\n            <h1>我是Edit页面</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function Index() {\r\n    return(\r\n        <div>\r\n            <h1>我是Index页面</h1>\r\n        </div>\r\n    )\r\n}"," import React from \"react\";\r\n import { Layout, Menu, Breadcrumb } from 'antd';\r\n import { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\n\r\n const { SubMenu } = Menu;\r\n const { Header, Content, Sider } = Layout;\r\n\r\n export default function Frame(props) {\r\n     return(\r\n         <Layout>\r\n             <Header className=\"header\">\r\n                 <div className=\"logo\" />\r\n                 <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                     <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                     <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                     <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n                 </Menu>\r\n             </Header>\r\n\r\n             <Layout>\r\n                 <Sider width={200} className=\"site-layout-background\">\r\n                     <Menu\r\n                         mode=\"inline\"\r\n                         defaultSelectedKeys={['1']}\r\n                         defaultOpenKeys={['sub1']}\r\n                         style={{ height: '100%', borderRight: 0 }}>\r\n                         <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n                             <Menu.Item key=\"1\">option1</Menu.Item>\r\n                             <Menu.Item key=\"2\">option2</Menu.Item>\r\n                             <Menu.Item key=\"3\">option3</Menu.Item>\r\n                             <Menu.Item key=\"4\">option4</Menu.Item>\r\n                         </SubMenu>\r\n                         <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\r\n                             <Menu.Item key=\"5\">option5</Menu.Item>\r\n                             <Menu.Item key=\"6\">option6</Menu.Item>\r\n                             <Menu.Item key=\"7\">option7</Menu.Item>\r\n                             <Menu.Item key=\"8\">option8</Menu.Item>\r\n                         </SubMenu>\r\n                         <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\r\n                             <Menu.Item key=\"9\">option9</Menu.Item>\r\n                             <Menu.Item key=\"10\">option10</Menu.Item>\r\n                             <Menu.Item key=\"11\">option11</Menu.Item>\r\n                             <Menu.Item key=\"12\">option12</Menu.Item>\r\n                         </SubMenu>\r\n                     </Menu>\r\n                 </Sider>\r\n\r\n                 <Layout style={{ padding: '0 24px 24px' }}>\r\n                     <Breadcrumb style={{ margin: '16px 0' }}>\r\n                         <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                         <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                         <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                     </Breadcrumb>\r\n                     <Content\r\n                         className=\"site-layout-background\"\r\n                         style={{\r\n                             padding: 24,\r\n                             margin: 0,\r\n                             minHeight: 280,}}>\r\n\r\n                         {props.children}\r\n\r\n                     </Content>\r\n                 </Layout>\r\n             </Layout>\r\n         </Layout>\r\n     )\r\n }","import React from 'react';\nimport {Route,Switch,Redirect} from \"react-router-dom\"\nimport {adminRoutes} from \"./routes\";\nimport Frame from './components/frame/Frame'\nfunction App() {\n  return (\n    <Frame>\n        <Switch>\n            {\n                adminRoutes.map( (route)=>{\n                   return <Route\n                       key = {route.path}\n                       path = {route.path}\n                       exact = {route.exact}\n                       render={(routeProps) =>{\n                           return <route.component {...routeProps}/>\n                       }\n                       }\n                   />\n                }\n                )\n            }\n            <Redirect to='/404'/>\n        </Switch>\n    </Frame>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDom from \"react-dom\"\nimport {BrowserRouter,Route,Redirect,Switch} from \"react-router-dom\"\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport {mainRoutes} from \"./routes\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDom.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path='/admin' render = { routeProps => <App {...routeProps}/>}/>\n            {\n                mainRoutes.map( (route) =>{\n                        return <Route key={route.path} path={route.path} component={route.component}/>\n                    })\n            }\n            <Redirect to='/404'/>\n        </Switch>\n    </BrowserRouter>,\n  document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}